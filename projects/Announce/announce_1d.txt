You now have:
   - a reasonable understanding of the existing software in your problem space.
   - a value proposition for how to build something better.
   - a characterization of your expe3cted users, and input from them about their
     capabilities, needs, and desires in this space.
   - a set of analyized and validated requirements for what your software should
     be able to to.

You now have enough information to write a proposal, in which you will describe
the software you propose to write, why you believe you can write it, and why
you believe it will be valuable/successful.  Assembling and writing such
proposals is a fundamental skill, whether in support of academic research or
commercial product development.  Unless you are doing this entirely by and 
for yourself, you will need the support of others;  They must understand what
you propose, and believe that it is worth doing.

I suggest that, by Tuesday, you (as a team):
   1. review the information you have to ensure its completeness
   2. write an outline for the final proposal
   3. have an implementability discussion, where you consider 
      the work involved in implementing your proposal and the
      applicable technologies, languages, and tools.
   4. Identify additional implementation topics within the
      final proposal outline, and areas requiring additional
      research before you know what to write.
   5. divide the writing and research among the team members.

Try to have your investigation results and detailed outlines ready 
for Friday's lab session.
