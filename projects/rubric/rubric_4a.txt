P4A Code and Test Suite

   Component:

   Primary Author:

   Final Code:		___/25

	per specification	___/5

		___	compiles and runs w/o error (else zero points)


		___	implements all functionality P3E specification


		___	implementation conforms to P3E specification


	follows design		___/4

		____	implementation follows P3E design


	non-triviality		___/4

		____	a significant amount of code that required significant thought


		____	clearly demonstrates programming competence


	code quality		___/4

		____	use of language/toolkit features


		____	simplicity and clarity (ignoring comments)


		____	efficiency


	readability		___/4

		____	comments describing module purpose and comments


		____	comments describing purpose of each method


		____	comments describing parameters and return values


		____	comments describing non-obvious variables/data structures


		____	comments describing complex or non-obvious code


		____	use of horizontal white space


		____	use of vertical white space


	packaging		___/4

		____	able to clone and build (without assistance) on appropriate system


		____	any non-standard build environment described in README


   Final Test Suite:	___/25

	per plan		___/5
	
		____	all tests execute correctly (else zero points)

		
		____	implements all test cases described in P3E test plan


		____	implementation conforms to P3E test plan


		____	clear indication of what test cases are being run



	test case quality	___/4

		____	all test cases thoroughly verify each assertion (2pt)

		____	non-trivial white-box test cases

		____	test cases requiring complex set-up or verification


	automation		___/4

		___	test suite can be run witn a single command


		___	testing requires no (or only trvial) manual input


		____	clear pass/fail indications for each test-case


		____	clear pass/fail indications for entire suite


	code quality		___/4

		____	use of language features and test framework features


		____	simplicity and clarity (ignoring comments)


		____	setup/cleanup (care throgoughness)


		____	efficiency


	readability		___/4

		____	comments describing purpose and contents of module


		____	comments describing assertion tested by each test case


		____	comments describing non-trivial setup/non-obvious code


		____	use of horizontal and vertical white space


	packaging		___/5

		____	able to build (without assistance) on appropriate system


		____	any non-standard build environment described in README


		____	easily runnable (without assistance) from instructions
