P2C	Final Architecture, Post Mortem, and Management

   Total Score:		___/60

   2C.1 Final Architecture:	___/25

   	Primary authors(s):

	changes:		___/5

		___	acknowledge and explain changes since preliminary architecture

		___	ALL must-fix issues from review have been reasonably addressed (3pt)

		___	responses to should-fix issues from review


	introduction:		___/5

		___	a high level summary of what product will do and HOW IT WILL DO IT

		___	an enumeration of the key SOFTWARE components (not the U/I)

		___	a description of their roles and interactions

		___	diagrams of non-obvious relationships and/or operational context


	specifications:		___/3

		___	functionality of each SOFTWARE component is described and reasonable
			(what the software does, not what the screens look like)

		___	key interfaces to each component are described by both 
			   types (e.g. C procedure, Python method, RESTful) 
			   and functionality (e.g. key methods/commands and what each does)

		___	key requirements for each component are described and reasonable
			(explicit functional requirements)


	feasibility:		___/3

		___	covers all non-trivial software components
			(all of the code that must be written)

		___	reasonable approach/technology to implement each component

		___	reasonable uses of off-the-shelf tools, components, and services

		___	no remaining issues that would prevent me from designing and building it


	prototyping/reserach:	___/3

		___	reasonable decisions about what required prototyping/research
			(key risks)

		___	all key (high impact, significant doubt) risks have been addressed

		___	architecture reflects those results


	rationale:		___/2

		___	discussion of key concerns that drove the architecture
			(no major non-obvious unjustified architectural decisions)

		___	reasonable justification for each non-obvious decision


	overall impressions:	___/4

		___	clarity: I understood what they are proposing to build


		___	reasonableness: solution seems appropriate, robust, not overly complex


		___	completeness (these pieces add up to a reasonable whole)


		___	bottom line: I believe this can be built and would work




   2C.2 Post Mortem:		___/10


	activities		___/5

		___	includes initial components and roles

		___	includes includes initial issues and feasibility

		___	includes includes problem analysis and prototyping

		___	includes preliminary architecture

		___	includes includes architectural review

		___	includes final architecture

	
	issues				___/2

		___	I have reason to believe it includes all significant events
			and issues that arose (e.g. because of regular updates with
			the team or having reviewed meeting minutes)

		___	each (non-trivial) issue/experience was reasonably discussed


	learning			___/3

		___	they understood why each important problem arose or
			why things that worked well did so

		___	they assessed the effectiveness of their approaches/responses

		___	they derived some valuable lessons

		___	written from a a positive (learning from our experiences) perspective


    Management:			___/5

		___/1	regular status checks reflected in promptly checked-in minutes


		___/1	minutes capture surprises/issues and plans to deal with them
			(including all issues of which you are aware)


		___/1	all problems reasonably dealt with


		___/1	plans were updated (on GitHub) to deal with challenges



    		___/1	work products checked-in according to (updated) plan by assigned user


   (Individual Performance from rubric_invidual.txt)
